<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Admin" xml:space="preserve">
    <value>АДМИНИСТРАТОР</value>
  </data>
  <data name="Assignment" xml:space="preserve">
    <value>Assignment</value>
  </data>
  <data name="Cards" xml:space="preserve">
    <value>Картички</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Category name</value>
  </data>
  <data name="CategoryNameLength" xml:space="preserve">
    <value>Invalid category name length</value>
  </data>
  <data name="CategoryNameRequired" xml:space="preserve">
    <value>Category must have a name</value>
  </data>
  <data name="Ceramics" xml:space="preserve">
    <value>Керамика</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>КОНТАКТИ</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Delivery" xml:space="preserve">
    <value>ДОСТАВКА</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionRequired" xml:space="preserve">
    <value>Item description is required</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>НАЧАЛО</value>
    </data>
  <data name="Flowers" xml:space="preserve">
    <value>Цветя</value>
  </data>
  <data name="Glass" xml:space="preserve">
    <value>Стъкло</value>
  </data>
  <data name="InvalidCategoryNameLength" xml:space="preserve">
    <value>Invalid category name length</value>
  </data>
  <data name="InvalidDescriptionLength" xml:space="preserve">
    <value>Invalid description length</value>
  </data>
  <data name="InvalidItemNameLength" xml:space="preserve">
    <value>Invalid item name</value>
  </data>
  <data name="InvalidLoginEmail" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="InvalidNameLength" xml:space="preserve">
    <value>Invalid name length</value>
  </data>
  <data name="InvalidOwnerNameLength" xml:space="preserve">
    <value>Invalid owner name length</value>
  </data>
  <data name="InvalidPrice" xml:space="preserve">
    <value>Item price must be a positive number</value>
  </data>
  <data name="InvalidQuantity" xml:space="preserve">
    <value>Item quantity must be a positive integer</value>
  </data>
  <data name="InvalidUrlLength" xml:space="preserve">
    <value>Url is longer than the longest allowed url</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Item name</value>
  </data>
  <data name="ItemNameRequired" xml:space="preserve">
    <value>Items must have a name</value>
  </data>
  <data name="Jewerly" xml:space="preserve">
    <value>Бижута</value>
  </data>
  <data name="Knitting" xml:space="preserve">
    <value>Плетиво</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>ВХОД/РЕГИСТРАЦИЯ</value>
  </data>
  <data name="MyAccount" xml:space="preserve">
    <value>ТОВА СЪМ АЗ</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Item owner</value>
  </data>
  <data name="OwnerRequired" xml:space="preserve">
    <value>Items must have owners</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordMinLength" xml:space="preserve">
    <value>Password must be at least 6 characters long</value>
  </data>
  <data name="PasswordsDontMatch" xml:space="preserve">
    <value>The new password and confirmation passwords do not match</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PictureLocation" xml:space="preserve">
    <value>The url of the item's picture</value>
  </data>
  <data name="Pictures" xml:space="preserve">
    <value>Картини</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PriceRequired" xml:space="preserve">
    <value>Item price is required</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="QuantityNameRequired" xml:space="preserve">
    <value>Quantity name is required</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>УСЛОВИЯ</value>
  </data>
  <data name="Textiles" xml:space="preserve">
    <value>Текстил</value>
  </data>
  <data name="Wood" xml:space="preserve">
    <value>Дърво</value>
  </data>
</root>